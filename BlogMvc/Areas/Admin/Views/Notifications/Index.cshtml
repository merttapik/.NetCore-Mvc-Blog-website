@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<EntityLayer.Concrete.Notification>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Notifications</h1>
<table class="table table-bordered">
    <tr>
        <th>#</th>
        <th>Notification Type</th>
        <th>Notification Details</th>
        <th>Make Passive</th>
        <th>Make Active</th>
        <th>Edit</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@item.NotificationId</td>
            <td>@item.NotificationType</td>
            <td>@item.NotificationDetails</td>
            <td><a href="#" class="btn btn-danger">Make Passive</a></td>
            <td><a href="#" class="btn btn-primary">Make Active</a></td>
            <td><a href="#" class="btn btn-warning">Edit Notification</a> </td>
        </tr>
    }
</table>
<br />
<a href="/Admin/Notifications/AddNotification/" class="btn btn-primary">Add New Notification</a>
<br />
<br />
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))

